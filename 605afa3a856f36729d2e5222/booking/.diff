diff -rdBEZN ../../../Scenarios/booking/low_debt/booking/ComputerClassRoom.java .submission/booking/ComputerClassRoom.java
0a1,63
> package booking;
> 
> import java.time.LocalDateTime;
> import java.time.temporal.ChronoField;
> import java.util.Objects;
> import java.util.Optional;
> 
> public class ComputerClassRoom extends ClassRoom {
> 	private final int openingHour;
> 	private final int closingHour;
> 	
> 	public ComputerClassRoom(String name, String description, boolean hasProjector, int openingHour, int closingHour) {
> 		super(name, description, hasProjector);
> 		this.openingHour = openingHour;
> 		this.closingHour = closingHour;
> 	}
> 	
> 	public int getOpeningHour() {
> 		return this.openingHour;
> 	}
> 	
> 	public int getClosingHour() {
> 		return this.closingHour;
> 	}
> 	
> 	@Override
>     public Optional<Booking> book(Interval interval, User customer) {
>     	LocalDateTime bookingStart = interval.getStart()
>             .with(ChronoField.SECOND_OF_MINUTE, 0)
>             .with(ChronoField.NANO_OF_SECOND, 0);
> 
>         LocalDateTime bookingEnd = interval.getEnd()
>             .with(ChronoField.SECOND_OF_MINUTE, 0)
>             .with(ChronoField.NANO_OF_SECOND, 0);
>             
>          if (
>             bookingStart.getHour() < this.openingHour
>             || bookingEnd.getHour() > this.closingHour
>         ) {
>             return Optional.empty();
>         }
>         return super.book(interval, customer);
>     }
>     
>     @Override
>     public boolean equals(Object o) {
>     	if (this == o) {
>     		return true;
>     	}
>     	if (o ==null || o.getClass() != this.getClass()) {
>     		return false;
>     	}
>     	ComputerClassRoom ccr = (ComputerClassRoom) o;
>         return super.equals(o)
>             && Objects.equals(this.getOpeningHour(), ccr.getOpeningHour())
>             && Objects.equals(this.getClosingHour(), ccr.getClosingHour());
>     }
> 
>     @Override
>     public int hashCode() {
>         return Objects.hash(super.hashCode(), this.getOpeningHour(), this.getClosingHour());
>     }
> }
\ No newline at end of file
